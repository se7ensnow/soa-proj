services:
  user-db:
    image: postgres:15
    container_name: user_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: users_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d users_db" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - user_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  post-db:
    image: postgres:15
    container_name: post_db
    restart: always
    environment:
      POSTGRES_USER: post_user
      POSTGRES_PASSWORD: post_pass
      POSTGRES_DB: posts_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U post_user -d posts_db" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - post_db_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  user-service:
    build: ./user_service
    container_name: user-service
    restart: always
    depends_on:
      user-db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://admin:adminpass@user-db:5432/users_db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8001:8000"

  post-service:
    build: ./post_service
    container_name: post-service
    restart: always
    depends_on:
      post-db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://post_user:post_pass@post-db:5432/posts_db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "50051:50051"

  api-gateway:
    build: ./api_gateway
    container_name: api-gateway
    restart: always
    depends_on:
      - user-service
      - post-service
    environment:
      USER_SERVICE_URL: http://user-service:8000
      POST_SERVICE_GRPC_URL: post-service:50051
    ports:
      - "8000:8000"

volumes:
  user_db_data:
  post_db_data: